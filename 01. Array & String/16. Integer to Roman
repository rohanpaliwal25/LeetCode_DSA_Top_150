https://leetcode.com/problems/integer-to-roman/description/?envType=study-plan-v2&envId=top-interview-150

Problem:-

Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.

Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:

I can be placed before V (5) and X (10) to make 4 and 9. 
X can be placed before L (50) and C (100) to make 40 and 90. 
C can be placed before D (500) and M (1000) to make 400 and 900.
Given an integer, convert it to a roman numeral.

 Solution:-

 class Solution {
    public String intToRoman(int num) {
        // Arrays to store the Roman symbols and their corresponding values
        String[] symbols = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};

        StringBuilder result = new StringBuilder();

        // Iterate through the symbols and values
        for (int i = 0; i < symbols.length; i++) {
            // Repeat the current symbol as many times as possible
            while (num >= values[i]) {
                result.append(symbols[i]);
                num -= values[i];
            }
        }

        return result.toString();
    }
}


Certainly! Converting an integer to a Roman numeral involves finding the Roman symbols that represent the integer value. Here's the Java code for converting an integer to a Roman numeral, along with an illustration. After that, I'll provide a comparison of both problems for a better understanding.

```java
class Solution {
    public String intToRoman(int num) {
        // Arrays to store the Roman symbols and their corresponding values
        String[] symbols = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};

        StringBuilder result = new StringBuilder();

        // Iterate through the symbols and values
        for (int i = 0; i < symbols.length; i++) {
            // Repeat the current symbol as many times as possible
            while (num >= values[i]) {
                result.append(symbols[i]);
                num -= values[i];
            }
        }

        return result.toString();
    }
}

-------------------------------------------------------------------------------------------------------------------

**Illustration:**

Consider the integer `num = 26`:

- Initialize an empty `StringBuilder` named `result`.
- Iterate through the symbols and values.
  - For each symbol, repeat it as many times as possible while subtracting its value from `num`.
  - Append the repeated symbols to `result`.
- The final result is the concatenation of symbols: "XXVI".

Now, let's compare both problems for a better understanding:

**Conversion: Roman to Integer**

- **Approach:**
  - Iterate through the Roman numeral characters.
  - Add the corresponding values to the result.
  - Check for subtraction cases.

- **Example:**
  - Roman numeral "XXVII" is converted to the integer 27.

**Conversion: Integer to Roman**

- **Approach:**
  - Iterate through predefined symbols and values.
  - Repeat each symbol as many times as possible while subtracting its value from the integer.

- **Example:**
  - Integer 26 is converted to the Roman numeral "XXVI".

**Comparison:**

- Both problems involve iterating through symbols and values.
- For Roman to Integer, there's a need to check for subtraction cases.
- For Integer to Roman, repetition of symbols is required.

These problems are complementary, and understanding one can provide insights into the other. The key is to establish a mapping between Roman symbols and their corresponding values and vice versa.














