https://leetcode.com/problems/candy/description/?envType=study-plan-v2&envId=top-interview-150

Problem:-

There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.

You are giving candies to these children subjected to the following requirements:

Constraints:-

Each child must have at least one candy.
Children with a higher rating get more candies than their neighbors.
Return the minimum number of candies you need to have to distribute the candies to the children.

Solution:-

class Solution {
    public int candy(int[] ratings) {
        int len = ratings.length;
        int[] left = new int[len];
        int[] right = new int[len];
        int res =0;
        Arrays.fill(left, 1);
        Arrays.fill(right, 1);
        for(int i=1; i<len; i++)
        {
            if(ratings[i]>ratings[i-1])
            {
                left[i] = left[i-1]+1;
            }    
        }
        for(int i=len-2; i>=0; i--)
        {
            if(ratings[i]>ratings[i+1])
            {
                right[i] = right[i+1]+1;
            }    
        }
        for(int i=0; i<len; ++i)
        {
            res += Math.max(left[i], right[i]);
        }
        return res;
    }
}


Summary:
- The code uses two passes (left and right) to calculate the number of candies each child receives based on the ratings of their neighbors.
- The final result is the sum of the maximum candies each child receives from their left and right neighbors.
- Time Complexity: O(n) where n is the length of the ratings array.
